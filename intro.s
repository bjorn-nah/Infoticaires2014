; Small C HuC6280 (v0.2, 08/Nov/97)
;
; Taken to HuC (22/Feb/00)
;
;
; This file generated by HuC (v3.21, 2005/04/09, Denki release)
; on Tue Jul  8 20:41:19 2014
;

HUC	= 1

	.include "startup.asm"
	.data
	.bank DATA_BANK

	.code

;----------------------------------------------------------------------------------------
; these are the various registers on the PSG. Definately not complete
;----------------------------------------------------------------------------------------
ChannelSelect       equ    $0800
MainVolume          equ    $0801
ChanFreqLo          equ    $0802
ChanFreqHi          equ    $0803
ChanControl         equ    $0804
ChanBalance         equ    $0805
ChanData            equ    $0806
ChanON              equ    $80
ChanDDA             equ    $40
ChanVolume          equ    $1F
;----------------------------------------------------------------------------------------
; these are useful masks for dealing with the psg.
;----------------------------------------------------------------------------------------
ChanXFer            equ    $0           ; transfer to channel
ChanReset           equ    $40          ; channel off, dda On => reset
LeftVolume          equ    $F0
RightVolume         equ    $0F
;----------------------------------------------------------------------------------------
; these are the various CD-BIOS MML Functions. Definately not complete
;----------------------------------------------------------------------------------------
PSGF_ON			.equ	$00
PSGF_OFF		.equ    $01
PSGF_INIT		.equ	$02
PSGF_BANK		.equ    $03			; already defined 
PSGF_TRACK  		.equ    $04
PSGF_WAVE		.equ    $05
PSGF_ENV		.equ    $06
PSGF_FM			.equ    $07
PSGF_PE			.equ    $08
PSGF_PC			.equ    $09
PSGF_TEMPO		.equ	$10
PSGF_PLAY		.equ	$0B
PSGF_MSTAT		.equ	$0c
PSGF_SSTAT		.equ	$0D
PSGF_MSTOP		.equ	$0E
PSGF_SSTOP		.equ    $0F
PSGF_ASTOP		.equ    $10
PSGF_MVOFF 		.equ    $11
PSGF_CONT    	.equ	$12
PSGF_FDOUT		.equ	$13
PSGF_DCNT		.equ	$14
	.proc _psgInit
	__pushw
    ;-----------------------------------------------------------------
	; Init function code.
	;-----------------------------------------------------------------
    lda		#PSGF_INIT
    sta		<_dh
    ;-----------------------------------------------------------------
	; get parameter off stack
    ;-----------------------------------------------------------------
    ldy		#0
	lda		[__stack],Y
    ;-----------------------------------------------------------------
	; save it, and call bios.
    ;-----------------------------------------------------------------
	sta 	<_al     	; _al is driver system number
    jsr		psg_bios
LL1:

	__addmi	2,__stack
	  rts
	.endp

	.proc _psgOn
	__pushw
    ;-----------------------------------------------------------------
	; Init function code.
	;-----------------------------------------------------------------
	lda		#PSGF_ON
    sta		<_dh
    ;-----------------------------------------------------------------
	; get parameter off stack
    ;-----------------------------------------------------------------
    ldy		#0
	lda		[__stack],Y
    ;-----------------------------------------------------------------
	; save it, and call bios.
    ;-----------------------------------------------------------------
    sta	<_al          ; irq to use. 1 = vsync
                      ;             0 = timer
    jsr	psg_bios
LL2:

	__addmi	2,__stack
	  rts
	.endp

	.proc _psgOff
    ;-----------------------------------------------------------------
	; Init function code.
	;-----------------------------------------------------------------
    lda		#PSGF_OFF
    sta		<_dh          ; save function
    ;-----------------------------------------------------------------
	; no parameters: just call bios.
    ;-----------------------------------------------------------------
    jsr		psg_bios
LL3:

	  rts
	.endp

	.proc _psgRegisterBank
	__pushw
    ;-----------------------------------------------------------------
	; Init function code.
	;-----------------------------------------------------------------
    lda		#PSGF_BANK
    sta		<_dh          ; save function
    ;-----------------------------------------------------------------
	; get parameters off stack and save them
    ;-----------------------------------------------------------------
    ldy		#0
	lda		[__stack],Y
    sta     <_ah
    ldy     #2	
	lda		[__stack],Y
    sta     <_al
    ;-----------------------------------------------------------------
	; and call bios.
    ;-----------------------------------------------------------------
	jsr 	psg_bios
LL4:

	__addmi	4,__stack
	  rts
	.endp

	.proc _psgRegisterTrack
	__pushw
    ;-----------------------------------------------------------------
	; Init function code.
	;-----------------------------------------------------------------
    lda		#PSGF_TRACK
    sta		<_dh          ; save function
    ;-----------------------------------------------------------------
	; get parameter off stack and save it
    ;-----------------------------------------------------------------
    ldy		#0
	lda		[__stack],Y
    sta     <_al
	iny
	lda		[__stack],Y
    sta     <_ah
    ;-----------------------------------------------------------------
	; and call bios.
    ;-----------------------------------------------------------------
	jsr 	psg_bios
LL5:

	__addmi	2,__stack
	  rts
	.endp

	.proc _psgRegisterWave
	__pushw
    ;-----------------------------------------------------------------
	; Init function code.
	;-----------------------------------------------------------------
    lda		#PSGF_WAVE
    sta		<_dh          ; save function
    ;-----------------------------------------------------------------
	; get parameter off stack and save it
    ;-----------------------------------------------------------------
    ldy		#0
	lda		[__stack],Y
    sta     _al
	iny
	lda		[__stack],Y
    sta     _ah
    ;-----------------------------------------------------------------
	; and call bios.
    ;-----------------------------------------------------------------
	jsr 	psg_bios
LL6:

	__addmi	2,__stack
	  rts
	.endp

	.proc _psgRegisterEnvelope
	__pushw
    ;-----------------------------------------------------------------
	; Init function code.
	;-----------------------------------------------------------------
    lda		#PSGF_ENV
    sta		<_dh          ; save function
    ;-----------------------------------------------------------------
	; get parameter off stack and save it
    ;-----------------------------------------------------------------
    ldy		#0
	lda		[__stack],Y
    sta     _al
	iny
	lda		[__stack],Y
    sta     _ah
    ;-----------------------------------------------------------------
	; and call bios.
    ;-----------------------------------------------------------------
	jsr 	psg_bios
LL7:

	__addmi	2,__stack
	  rts
	.endp

	.proc _psgRegisterFM
	__pushw
    ;-----------------------------------------------------------------
	; Init function code.
	;-----------------------------------------------------------------
    lda		#PSGF_FM
    sta		<_dh          ; save function
    ;-----------------------------------------------------------------
	; get parameter off stack and save it
    ;-----------------------------------------------------------------
    ldy		#0
	lda		[__stack],Y
    sta     _al
	iny
	lda		[__stack],Y
    sta     _ah
    ;-----------------------------------------------------------------
	; and call bios.
    ;-----------------------------------------------------------------
	jsr 	psg_bios
LL8:

	__addmi	2,__stack
	  rts
	.endp

	.proc _psgRegisterPE
	__pushw
    ;-----------------------------------------------------------------
	; Init function code.
	;-----------------------------------------------------------------
    lda		#PSGF_PE
    sta		<_dh          ; save function
    ;-----------------------------------------------------------------
	; get parameter off stack and save it
    ;-----------------------------------------------------------------
    ldy		#0
	lda		[__stack],Y
    sta     _al
	iny
	lda		[__stack],Y
    sta     _ah
    ;-----------------------------------------------------------------
	; and call bios.
    ;-----------------------------------------------------------------
	jsr 	psg_bios
LL9:

	__addmi	2,__stack
	  rts
	.endp

	.proc _psgRegisterPC
	__pushw
    ;-----------------------------------------------------------------
	; Init function code.
	;-----------------------------------------------------------------
    lda		#PSGF_PC
    sta		<_dh          ; save function
    ;-----------------------------------------------------------------
	; get parameter off stack and save it
    ;-----------------------------------------------------------------
    ldy		#0
	lda		[__stack],Y
    sta     _al
	iny
	lda		[__stack],Y
    sta     _ah
    ;-----------------------------------------------------------------
	; and call bios.
    ;-----------------------------------------------------------------
	jsr 	psg_bios
LL10:

	__addmi	2,__stack
	  rts
	.endp

	.proc _psgPlay
	__pushw
    ;-----------------------------------------------------------------
	; Init function code.
	;-----------------------------------------------------------------
	lda		#PSGF_PLAY
	sta		<_dh
    ;-----------------------------------------------------------------
	; get parameter off stack and save it
    ;-----------------------------------------------------------------
    ldy		#0
	lda		[__stack],Y
    sta     _al
    stz     _ah
    ;-----------------------------------------------------------------
	; and call bios.
    ;-----------------------------------------------------------------
	jsr 	psg_bios
LL11:

	__addmi	2,__stack
	  rts
	.endp

	.proc _psgMStat
    ;-----------------------------------------------------------------
	; Init function code.
	;-----------------------------------------------------------------
    lda		#PSGF_MSTAT
    sta		<_dh         ; set function number
    ;-----------------------------------------------------------------
	; read track status and return.
    ;-----------------------------------------------------------------
	jsr		psg_bios     ; get status
	tax
	lda		#0			 ; clear high byte of status
LL12:

	  rts
	.endp

	.proc _psgSStat
    ;-----------------------------------------------------------------
	; Init function code.
	;-----------------------------------------------------------------
	lda		#PSGF_SSTAT
	sta		<_dh          ; set function number
    ;-----------------------------------------------------------------
	; read track status and return.
    ;-----------------------------------------------------------------
	jsr		psg_bios      ; get status
	tax
	lda		#0            ; clear high byte
LL13:

	  rts
	.endp

	.proc _psgMStop
	__pushw
    ;-----------------------------------------------------------------
	; Init function code.
	;-----------------------------------------------------------------
	lda		#PSGF_MSTOP
    sta		<_dh          ; set function number
    ;-----------------------------------------------------------------
	; get parameter off stack and save it
    ;-----------------------------------------------------------------
    ldy		#0
	lda		[__stack],Y
    sta     _al
    stz     _ah
    ;-----------------------------------------------------------------
	; read track status and return.
    ;-----------------------------------------------------------------
    jsr		psg_bios
	lda		#$0
LL14:

	__addmi	2,__stack
	  rts
	.endp

	.proc _psgSStop
	__pushw
    ;-----------------------------------------------------------------
	; Init function code.
	;-----------------------------------------------------------------
	lda		#PSGF_SSTOP
    sta		<_dh          ; set function number
    ;-----------------------------------------------------------------
	; get parameter off stack and save it
    ;-----------------------------------------------------------------
    ldy		#0
	lda		[__stack],Y
    sta     _al
    stz     _ah
    ;-----------------------------------------------------------------
	; read track status and return.
    ;-----------------------------------------------------------------
    jsr		psg_bios
	lda		#0
LL15:

	__addmi	2,__stack
	  rts
	.endp

	.proc _psgAllStop
    ;-----------------------------------------------------------------
	; Init function code.
	;-----------------------------------------------------------------
	lda		#PSGF_ASTOP
    sta		<_dh          ; set function number
    ;-----------------------------------------------------------------
	; and call bios to stop everything
    ;-----------------------------------------------------------------
    jsr		psg_bios
LL16:

	  rts
	.endp

	.proc _psgMute
	__pushw
    ;-----------------------------------------------------------------
	; Init function code.
	;-----------------------------------------------------------------
	lda		#PSGF_MVOFF
    sta		<_dh          ; set function number
    ;-----------------------------------------------------------------
	; get parameter off stack and save it
    ;-----------------------------------------------------------------
    ldy		#0
	lda		[__stack],Y
    sta     _al
    stz     _ah
    ;-----------------------------------------------------------------
	; and call bios to mute tracks
    ;-----------------------------------------------------------------
    jsr		psg_bios
LL17:

	__addmi	2,__stack
	  rts
	.endp

	.proc _psgCont
	__pushw
    ;-----------------------------------------------------------------
	; Init function code.
	;-----------------------------------------------------------------
	lda		#PSGF_CONT
    sta		<_dh          ; set function number
    ;-----------------------------------------------------------------
	; get parameter off stack and save it
    ;-----------------------------------------------------------------
    ldy		#0
	lda		[__stack],Y
    sta     _al
    stz     _ah
    ;-----------------------------------------------------------------
	; ask bios to continue tracks.
    ;-----------------------------------------------------------------
    jsr		psg_bios
LL18:

	__addmi	2,__stack
	  rts
	.endp

	.proc _psgFadeOut
	__pushw
    ;-----------------------------------------------------------------
	; Init function code.
	;-----------------------------------------------------------------
	lda		#PSGF_FDOUT
    sta		<_dh          ; set function number
    ;-----------------------------------------------------------------
	; get parameter off stack and save it
    ;-----------------------------------------------------------------
    ldy		#0
	lda		[__stack],Y
    sta     _al
    stz     _ah
    ;-----------------------------------------------------------------
	; ask bios to fade tracks.
    ;-----------------------------------------------------------------
    jsr		psg_bios
LL19:

	__addmi	2,__stack
	  rts
	.endp

	.proc _psgDelay
	__pushw
    ;-----------------------------------------------------------------
	; Init function code.
	;-----------------------------------------------------------------
	lda		#PSGF_DCNT
    sta		<_dh          ; set function number
    ;-----------------------------------------------------------------
	; get parameter off stack and save it
    ;-----------------------------------------------------------------
    ldy		#0
	lda		[__stack],Y
    sta     _al
    ;-----------------------------------------------------------------
	; ask bios to fade tracks.
    ;-----------------------------------------------------------------
    jsr		psg_bios
LL20:

	__addmi	2,__stack
	  rts
	.endp

	.proc _psgTempo
	__pushw
    ;-----------------------------------------------------------------
	; Init function code.
	;-----------------------------------------------------------------
	lda		#PSGF_TEMPO
    sta		<_dh          ; set function number
    ;-----------------------------------------------------------------
	; get parameter off stack and save it
    ;-----------------------------------------------------------------
    ldy		#0
	lda		[__stack],Y
    sta     _al
    ;-----------------------------------------------------------------
	; ask bios to fade tracks.
    ;-----------------------------------------------------------------
    jsr		psg_bios
LL21:

	__addmi	2,__stack
	  rts
	.endp

	.proc _sngInit
;-----------------
; set bank values 
;
	lda 	#$03
	sta	<_dh
	lda	#BANK(_sngBank1)
	sta	<_al
	stz	<_ah
	jsr	psg_bios
;--------------------------------
; set track index table location 
;
	lda    #$04
	sta    <_dh
	lda	#LOW(TRACK_IX)
	sta	<_al
	lda	#HIGH(TRACK_IX)
	sta	<_ah
	jsr	psg_bios
;--------------------
; register modulation 
;
	lda	#7
	sta	<_dh
	lda	#LOW(MODU_IX)
	sta	<_al
	lda	#HIGH(MODU_IX)
	sta	<_ah
	jsr	psg_bios
;--------------------
; register percussion 
;
	lda	#9
	sta	<_dh
	lda	#LOW(DRUM_TAB)
	sta	<_al
	lda	#HIGH(DRUM_TAB)
	sta	<_ah
	jsr	psg_bios
;--------------------
; Set Tempo 
;
	lda	#10
	sta	<_dh
	lda	#80
	sta	<_al
	jsr	psg_bios
LL22:

	  rts
	.endp

    .data
    .bank   9
    .org    $8000
_sngBank1:
    .include  "mml/nope.asm"
    .code
	.data
	.dw $0
_twistmap:
	.incbin "introinfo.fmp"

	.code
	.data
	.dw $0800
_twisttiles__data__:
	.incchr "titre02.pcx",0,0,20,7
	.incchr "twistauto.pcx",0,0,32,2
	.code
	.data
	.dw $0
_twistpal:
	.incpal "titre02.pcx"
	.code
	.proc _main
	__addmi	-47,__stack
	  call	_init_satb
	__stwi_s	0,39
	__stwi_s	0,6
	__stwi_s	0,4
	__stwi_s	24,27
	  ldy	#0
	  call	_satb_update
	__farptr	_twistmap,_bl,_si
	__ldwi	32
	__stw	_ax
	__ldwi	28
	  call	_set_map_data.3
	__ldwi	_twisttiles
	__stw	_di
	  call	_set_tile_data.1
	__ldwi	4096
	  call	_load_tile
	__ldwi	0
	  stx	_al
	__ldwi	0
	  stx	_ah
	__ldwi	0
	__phw	4,4
	__ldwi	0
	__phw	2
	__ldwi	32
	  stx	_dl
	__ldwi	28
	  stx	_dh
	  call	_load_map.6
	__ldwi	0
	  stx	_al
	__farptr	_twistpal,_bl,_si
	__ldwi	1
	  stx	_cl
	  call	_load_palette.3
	__ldwi	5
	  call	_psgInit
	__ldwi	0
	  call	_psgOn
	__ldwi	0
	  call	_psgPlay
	  call	_sngInit
	__ldwi	0
	  call	_psgDelay
	__ldwi	2
	__stw	_color_reg
	__ldwi	7
	  stx	_al
	__ldwi	7
	  stx	_ah
	__ldwi	7
	  call	_set_color_rgb.4
	__ldwi	2
	  stx	_al
	__ldwi	0
	  call	_set_font_color.2
	__ldwi	0
	  call	_set_font_pal
	  call	_load_default_font
LL24:

LL25:

LL26:

	__pea_s	43
	  call	_psgMStat
	__stwps
	__pea_s	41
	  call	_psgSStat
	__stwps
	__ldw_s	39
	__pushw
	__ldwi	400
	  jsr	smod
	__stw	<__temp
	__ldwi	380
	  jsr	eqzp
	__lbeq	LL28
	__stwi_s	2,2
LL28:

	__ldw_s	39
	__pushw
	__ldwi	400
	  jsr	smod
	__stw	<__temp
	__ldwi	380
	  jsr	gtzp
	__lbeq	LL29
	__stwi_s	10,0
LL30:

	__ldw_s	0
	__stw	<__temp
	__ldwi	26
	  jsr	ltzp
	__lbne	LL32
	__lbra	LL33
LL31:

	__ldw_s	0
	__incw_s	0
	__lbra	LL30
LL32:

	__ldw_s	2
	__stw	<__temp
	__ldwi	20
	  jsr	ltzp
	__lbeq	LL34
	__ldwi	_text
	__addwi	1
	__ldb_p
	__stb_s	14
	__ldb_s	14
	__phb	2,2
	__ldw_s	2
	__phb	1
	__ldw_s	0
	  call	_put_char.3
LL34:

	__lbra	LL31
LL33:

	__ldw_s	2
	__incw_s	2
LL29:

	__ldw_s	39
	__pushw
	__ldwi	400
	  jsr	smod
	__stw	<__temp
	__ldwi	288
	  jsr	ltzp
	__lbeq	LL35
	__ldwi	_text
	__addw_s	6
	__ldb_p
	__stb_s	14
	__ldw_s	6
	__pushw
	__ldwi	18
	  jsr	sdiv
	__pushw
	__ldwi	16
	  jsr	smod
	__addwi	10
	__stw_s	12
	__ldw_s	6
	__pushw
	__ldwi	18
	  jsr	smod
	__addwi	2
	__stw_s	10
	__ldb_s	14
	__phb	2,2
	__ldw_s	10
	__phb	1
	__ldw_s	12
	  call	_put_char.3
	__ldw_s	6
	__incw_s	6
LL35:

	__ldw_s	6
	__stw	<__temp
	__ldwi	2304
	  jsr	gezp
	__lbeq	LL36
	__stwi_s	0,6
LL36:

	__ldw_s	39
	__incw_s	39
	__stwi_s	0,25
LL37:

	__ldw_s	25
	__stw	<__temp
	__ldwi	28
	  jsr	ltzp
	__lbne	LL39
	__lbra	LL40
LL38:

	__ldw_s	25
	__incw_s	25
	__lbra	LL37
LL39:

	__ldw_s	39
	__pushw
	__ldw_s	27
	__subws
	__pushw
	__ldwi	512
	  jsr	smod
	__stw_s	19
	__ldw_s	39
	__addw_s	25
	__pushw
	__ldwi	512
	  jsr	smod
	__stw_s	29
	__ldw_s	29
	__pushw
	__lea_s	17
	  call	_sin
	__ldw_s	19
	__pushw
	__lea_s	19
	  call	_cos
	__ldw_s	17
	__pushw
	__ldwi	3
	  jsr	smul
	__pushw
	__ldw_s	17
	__subws
	__pushw
	__ldwi	7
	  jsr	sdiv
	__stw_s	31
	__pushw
	__ldwi	16
	  jsr	smod
	__stw_s	37
	__stwi_s	0,35
LL41:

	__ldw_s	35
	__stw	<__temp
	__ldwi	4
	  jsr	ltzp
	__lbne	LL43
	__lbra	LL44
LL42:

	__ldw_s	35
	__incw_s	35
	__lbra	LL41
LL43:

	__ldw_s	37
	__pushw
	__ldwi	4
	  jsr	smul
	__addw_s	35
	__stw_s	33
	__ldw_s	27
	__addw_s	35
	__stw_s	23
	__ldw_s	25
	__stw_s	21
	__ldw_s	33
	__addwi	140
	__stw	_dx
	__ldw_s	23
	  stx	_al
	__ldw_s	21
	  call	_put_tile.3
	__lbra	LL42
LL44:

	__lbra	LL38
LL40:

	  ldy	#0
	  call	_satb_update
	  ldy	#0
	  call	_vsync
	__lbra	LL26
LL27:

LL23:

	__addmi	47,__stack
	  rts
	.endp

	.proc _cos
	__pushw
	__ldw_s	2
	__stw	<__temp
	__ldwi	512
	  jsr	gtzp
	__lbeq	LL46
	__ldw_s	2
	__subwi	512
	__stw_s	2
LL46:

	__ldw_s	2
	__stw	<__temp
	__ldwi	128
	  jsr	lezp
	__lbeq	LL47
	__ldw_s	0
	__pushw
	__ldw_s	4
	__aslw
	__addwi	_cosSinTable
	__stw	__ptr
	__ldwp	__ptr
	__stwps
	__lbra	LL45
LL47:

	__ldw_s	2
	__stw	<__temp
	__ldwi	256
	  jsr	lezp
	__lbeq	LL48
	__ldw_s	0
	__pushw
	__ldwi	_cosSinTable
	__pushw
	__ldwi	256
	__pushw
	__ldw_s	8
	__subws
	__aslw
	__addws
	__stw	__ptr
	__ldwp	__ptr
	__negw
	__stwps
	__lbra	LL45
LL48:

	__ldw_s	2
	__stw	<__temp
	__ldwi	384
	  jsr	lezp
	__lbeq	LL49
	__ldw_s	0
	__pushw
	__ldwi	_cosSinTable
	__pushw
	__ldw_s	6
	__subwi	256
	__aslw
	__addws
	__stw	__ptr
	__ldwp	__ptr
	__negw
	__stwps
	__lbra	LL45
LL49:

	__ldw_s	0
	__pushw
	__ldwi	_cosSinTable
	__pushw
	__ldwi	512
	__pushw
	__ldw_s	8
	__subws
	__aslw
	__addws
	__stw	__ptr
	__ldwp	__ptr
	__stwps
LL45:

	__addmi	4,__stack
	  rts
	.endp

	.proc _sin
	__pushw
	__ldw_s	2
	__stw	<__temp
	__ldwi	128
	  jsr	lezp
	__lbeq	LL51
	__ldw_s	0
	__pushw
	__ldwi	_cosSinTable
	__pushw
	__ldwi	128
	__pushw
	__ldw_s	8
	__subws
	__aslw
	__addws
	__stw	__ptr
	__ldwp	__ptr
	__stwps
	__lbra	LL52
LL51:

	__ldw_s	2
	__stw	<__temp
	__ldwi	256
	  jsr	lezp
	__lbeq	LL53
	__ldw_s	0
	__pushw
	__ldwi	_cosSinTable
	__pushw
	__ldw_s	6
	__subwi	128
	__aslw
	__addws
	__stw	__ptr
	__ldwp	__ptr
	__stwps
	__lbra	LL54
LL53:

	__ldw_s	2
	__stw	<__temp
	__ldwi	384
	  jsr	lezp
	__lbeq	LL55
	__ldw_s	0
	__pushw
	__ldwi	_cosSinTable
	__pushw
	__ldwi	384
	__pushw
	__ldw_s	8
	__subws
	__aslw
	__addws
	__stw	__ptr
	__ldwp	__ptr
	__negw
	__stwps
	__lbra	LL56
LL55:

	__ldw_s	0
	__pushw
	__ldwi	_cosSinTable
	__pushw
	__ldw_s	6
	__subwi	384
	__aslw
	__addws
	__stw	__ptr
	__ldwp	__ptr
	__negw
	__stwps
LL56:

LL54:

LL52:

LL50:

	__addmi	4,__stack
	  rts
	.endp

	.data
	.bank CONST_BANK
	.org $4000
LL0:
	.db	0,0,0,0,0,0,0,0
	.db	0,0,0,0,0,0,0,0
	.db	0,0,0,0,0,0,0,0
	.db	0,0,0,0,0,0,0,0
	.db	0,0,0,0,0,0,0,0
	.db	0,0,0,0,0,0,0,0
	.db	0,0,0,0,0,0,0,0
	.db	0,0,0,0,0,0,0,0
	.db	0,0,0,0,0,0,0,0
	.db	0,0,0,0,0,0,0,0
	.db	0,0,0,0,0,0,0,0
	.db	0,0,0,0,0,0,0,0
	.db	0,0,0,0,0,0,0,0
	.db	0,0,0,0,0,0,0,0
	.db	0,0,0,0,0,0,0,0
	.db	0,0,0,0,0,0,0,0
	.db	0,0,0,0,0,0,0,0
	.db	0,0,0,0,0,0,0,0
	.db	0,0,0,0,0,0,0,0
	.db	0,0,0,0,0,0,0,0
	.db	0,0,0,0,0,0,0,0
	.db	0,0,0,0,0,0,0,0
	.db	0,0,0,0,0,0,0,0
	.db	0,0,0,0,0,0,0,0
	.db	0,0,0,0,0,0,0,0
	.db	0,0,0,0
_text:
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	"+"
	.db	"-"
	.db	"-"
	.db	"-"
	.db	"-"
	.db	"-"
	.db	"-"
	.db	"-"
	.db	"-"
	.db	"-"
	.db	"-"
	.db	"-"
	.db	"-"
	.db	"-"
	.db	"-"
	.db	"-"
	.db	"-"
	.db	"+"
	.db	":"
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	":"
	.db	":"
	.db	" "
	.db	"O"
	.db	"b"
	.db	"s"
	.db	"o"
	.db	"l"
	.db	"e"
	.db	"t"
	.db	"e"
	.db	" "
	.db	"T"
	.db	"e"
	.db	"a"
	.db	"r"
	.db	"s"
	.db	" "
	.db	":"
	.db	":"
	.db	" "
	.db	" "
	.db	" "
	.db	"P"
	.db	"r"
	.db	"e"
	.db	"s"
	.db	"e"
	.db	"n"
	.db	"t"
	.db	"e"
	.db	" "
	.db	":"
	.db	" "
	.db	" "
	.db	" "
	.db	":"
	.db	":"
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	"-"
	.db	"-"
	.db	"-"
	.db	"-"
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	":"
	.db	":"
	.db	"I"
	.db	"N"
	.db	"F"
	.db	"O"
	.db	"T"
	.db	"I"
	.db	"C"
	.db	"A"
	.db	"R"
	.db	"E"
	.db	"S"
	.db	" "
	.db	"2"
	.db	"0"
	.db	"1"
	.db	"4"
	.db	":"
	.db	":"
	.db	" "
	.db	"1"
	.db	"6"
	.db	"-"
	.db	"1"
	.db	"8"
	.db	" "
	.db	"j"
	.db	"u"
	.db	"i"
	.db	"l"
	.db	"l"
	.db	"e"
	.db	"t"
	.db	" "
	.db	" "
	.db	":"
	.db	":"
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	"-"
	.db	"-"
	.db	"-"
	.db	"-"
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	":"
	.db	":"
	.db	" "
	.db	" "
	.db	" "
	.db	"C"
	.db	"o"
	.db	"u"
	.db	"r"
	.db	"c"
	.db	"e"
	.db	"l"
	.db	"l"
	.db	"e"
	.db	"s"
	.db	" "
	.db	" "
	.db	" "
	.db	":"
	.db	":"
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	"("
	.db	"5"
	.db	"8"
	.db	"'"
	.db	"2"
	.db	"1"
	.db	"0"
	.db	")"
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	":"
	.db	":"
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	":"
	.db	"+"
	.db	"-"
	.db	"-"
	.db	"-"
	.db	"-"
	.db	"-"
	.db	"-"
	.db	"-"
	.db	"-"
	.db	"-"
	.db	"-"
	.db	"-"
	.db	"-"
	.db	"-"
	.db	"-"
	.db	"-"
	.db	"-"
	.db	"+"
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	"-"
	.db	"-"
	.db	"-"
	.db	"-"
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	"O"
	.db	"b"
	.db	"s"
	.db	"o"
	.db	"l"
	.db	"e"
	.db	"t"
	.db	"e"
	.db	" "
	.db	"T"
	.db	"e"
	.db	"a"
	.db	"r"
	.db	"s"
	.db	" "
	.db	"e"
	.db	"s"
	.db	"t"
	.db	"h"
	.db	"e"
	.db	"u"
	.db	"r"
	.db	"e"
	.db	"u"
	.db	"x"
	.db	" "
	.db	"d"
	.db	"e"
	.db	" "
	.db	"v"
	.db	"o"
	.db	"u"
	.db	"s"
	.db	" "
	.db	" "
	.db	" "
	.db	"c"
	.db	"o"
	.db	"n"
	.db	"v"
	.db	"i"
	.db	"e"
	.db	"r"
	.db	" "
	.db	"a"
	.db	" "
	.db	"s"
	.db	"o"
	.db	"n"
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	"r"
	.db	"e"
	.db	"n"
	.db	"d"
	.db	"e"
	.db	"z"
	.db	"-"
	.db	"v"
	.db	"o"
	.db	"u"
	.db	"s"
	.db	" "
	.db	"a"
	.db	"n"
	.db	"n"
	.db	"u"
	.db	"e"
	.db	"l"
	.db	"A"
	.db	"u"
	.db	" "
	.db	"p"
	.db	"r"
	.db	"o"
	.db	"g"
	.db	"r"
	.db	"a"
	.db	"m"
	.db	"m"
	.db	"e"
	.db	" "
	.db	"l"
	.db	"e"
	.db	"s"
	.db	" "
	.db	" "
	.db	"g"
	.db	"r"
	.db	"a"
	.db	"n"
	.db	"d"
	.db	"s"
	.db	" "
	.db	"c"
	.db	"l"
	.db	"a"
	.db	"s"
	.db	"s"
	.db	"i"
	.db	"q"
	.db	"u"
	.db	"e"
	.db	"s"
	.db	" "
	.db	"h"
	.db	"a"
	.db	"b"
	.db	"i"
	.db	"t"
	.db	"u"
	.db	"e"
	.db	"l"
	.db	"s"
	.db	":"
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	"j"
	.db	"e"
	.db	"u"
	.db	"x"
	.db	" "
	.db	"v"
	.db	"i"
	.db	"d"
	.db	"e"
	.db	"o"
	.db	","
	.db	" "
	.db	"b"
	.db	"o"
	.db	"u"
	.db	"r"
	.db	"s"
	.db	"e"
	.db	"d"
	.db	"'"
	.db	"e"
	.db	"c"
	.db	"h"
	.db	"a"
	.db	"n"
	.db	"g"
	.db	"e"
	.db	"s"
	.db	","
	.db	" "
	.db	"b"
	.db	"i"
	.db	"e"
	.db	"r"
	.db	"e"
	.db	"s"
	.db	"b"
	.db	"o"
	.db	"u"
	.db	"f"
	.db	"f"
	.db	"e"
	.db	" "
	.db	"e"
	.db	"t"
	.db	" "
	.db	"b"
	.db	"i"
	.db	"e"
	.db	"n"
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	"p"
	.db	"l"
	.db	"u"
	.db	"s"
	.db	" "
	.db	"e"
	.db	"n"
	.db	"c"
	.db	"o"
	.db	"r"
	.db	"e"
	.db	"."
	.db	"."
	.db	"."
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	"-"
	.db	"-"
	.db	"-"
	.db	"-"
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	"L"
	.db	"i"
	.db	"b"
	.db	"r"
	.db	"e"
	.db	" "
	.db	"a"
	.db	" "
	.db	"v"
	.db	"o"
	.db	"u"
	.db	"s"
	.db	" "
	.db	"d"
	.db	"'"
	.db	" "
	.db	" "
	.db	" "
	.db	"a"
	.db	"p"
	.db	"p"
	.db	"o"
	.db	"r"
	.db	"t"
	.db	"e"
	.db	"r"
	.db	" "
	.db	"l"
	.db	"e"
	.db	" "
	.db	"m"
	.db	"a"
	.db	"t"
	.db	"o"
	.db	"s"
	.db	" "
	.db	"q"
	.db	"u"
	.db	"e"
	.db	" "
	.db	"v"
	.db	"o"
	.db	"u"
	.db	"s"
	.db	" "
	.db	"s"
	.db	"o"
	.db	"u"
	.db	"h"
	.db	"a"
	.db	"i"
	.db	"t"
	.db	"e"
	.db	"z"
	.db	"("
	.db	"c"
	.db	"o"
	.db	"n"
	.db	"s"
	.db	"o"
	.db	"l"
	.db	"e"
	.db	" "
	.db	"/"
	.db	" "
	.db	"o"
	.db	"r"
	.db	"d"
	.db	"i"
	.db	" "
	.db	"/"
	.db	" "
	.db	"b"
	.db	"o"
	.db	"r"
	.db	"n"
	.db	"e"
	.db	" "
	.db	"/"
	.db	" "
	.db	"h"
	.db	"a"
	.db	"n"
	.db	"d"
	.db	"h"
	.db	"e"
	.db	"l"
	.db	"d"
	.db	" "
	.db	" "
	.db	"/"
	.db	" "
	.db	"b"
	.db	"o"
	.db	"u"
	.db	"t"
	.db	"e"
	.db	"i"
	.db	"l"
	.db	"l"
	.db	"e"
	.db	"s"
	.db	")"
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	"P"
	.db	"o"
	.db	"s"
	.db	"s"
	.db	"i"
	.db	"b"
	.db	"i"
	.db	"l"
	.db	"i"
	.db	"t"
	.db	"e"
	.db	" "
	.db	"d"
	.db	"e"
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	"d"
	.db	"o"
	.db	"r"
	.db	"m"
	.db	"i"
	.db	"r"
	.db	" "
	.db	"s"
	.db	"u"
	.db	"r"
	.db	" "
	.db	"p"
	.db	"l"
	.db	"a"
	.db	"c"
	.db	"e"
	.db	" "
	.db	" "
	.db	"("
	.db	"c"
	.db	"a"
	.db	"m"
	.db	"p"
	.db	"i"
	.db	"n"
	.db	"g"
	.db	" "
	.db	"o"
	.db	"u"
	.db	" "
	.db	"a"
	.db	" "
	.db	"l"
	.db	"'"
	.db	" "
	.db	" "
	.db	"a"
	.db	"r"
	.db	"r"
	.db	"a"
	.db	"c"
	.db	"h"
	.db	"e"
	.db	")"
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	"R"
	.db	"e"
	.db	"s"
	.db	"t"
	.db	"a"
	.db	"u"
	.db	"r"
	.db	"a"
	.db	"t"
	.db	"i"
	.db	"o"
	.db	"n"
	.db	" "
	.db	"e"
	.db	"t"
	.db	" "
	.db	" "
	.db	" "
	.db	"c"
	.db	"o"
	.db	"n"
	.db	"s"
	.db	"o"
	.db	"m"
	.db	"m"
	.db	"a"
	.db	"t"
	.db	"i"
	.db	"o"
	.db	"n"
	.db	"s"
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	"c"
	.db	"o"
	.db	"m"
	.db	"p"
	.db	"r"
	.db	"i"
	.db	"s"
	.db	"e"
	.db	"s"
	.db	" "
	.db	"d"
	.db	"a"
	.db	"n"
	.db	"s"
	.db	" "
	.db	"l"
	.db	"a"
	.db	" "
	.db	"p"
	.db	"a"
	.db	"r"
	.db	"t"
	.db	"i"
	.db	"c"
	.db	"i"
	.db	"p"
	.db	"a"
	.db	"t"
	.db	"i"
	.db	"o"
	.db	"n"
	.db	" "
	.db	"a"
	.db	"u"
	.db	"x"
	.db	" "
	.db	"f"
	.db	"r"
	.db	"a"
	.db	"i"
	.db	"s"
	.db	"."
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	"A"
	.db	"m"
	.db	"b"
	.db	"i"
	.db	"a"
	.db	"n"
	.db	"c"
	.db	"e"
	.db	" "
	.db	"c"
	.db	"o"
	.db	"o"
	.db	"l"
	.db	","
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	"p"
	.db	"o"
	.db	"i"
	.db	"l"
	.db	"a"
	.db	"d"
	.db	"e"
	.db	"s"
	.db	" "
	.db	"e"
	.db	"n"
	.db	"t"
	.db	"r"
	.db	"e"
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	"p"
	.db	"o"
	.db	"t"
	.db	"e"
	.db	"s"
	.db	" "
	.db	"e"
	.db	"t"
	.db	" "
	.db	"i"
	.db	"n"
	.db	"s"
	.db	"t"
	.db	"a"
	.db	"n"
	.db	"t"
	.db	"s"
	.db	" "
	.db	"e"
	.db	"p"
	.db	"i"
	.db	"c"
	.db	"s"
	.db	" "
	.db	"a"
	.db	" "
	.db	"l"
	.db	"a"
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	"d"
	.db	"i"
	.db	"s"
	.db	"c"
	.db	"r"
	.db	"e"
	.db	"t"
	.db	"i"
	.db	"o"
	.db	"n"
	.db	" "
	.db	"d"
	.db	"e"
	.db	"s"
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	"p"
	.db	"a"
	.db	"r"
	.db	"t"
	.db	"i"
	.db	"c"
	.db	"i"
	.db	"p"
	.db	"a"
	.db	"n"
	.db	"t"
	.db	"s"
	.db	"."
	.db	" "
	.db	":"
	.db	")"
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	"-"
	.db	"-"
	.db	"-"
	.db	"-"
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	"-"
	.db	"-"
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	"I"
	.db	"l"
	.db	" "
	.db	"m"
	.db	"e"
	.db	" "
	.db	"s"
	.db	"e"
	.db	"m"
	.db	"b"
	.db	"l"
	.db	"e"
	.db	" "
	.db	"q"
	.db	"u"
	.db	"e"
	.db	" "
	.db	" "
	.db	"t"
	.db	"o"
	.db	"u"
	.db	"t"
	.db	" "
	.db	"e"
	.db	"s"
	.db	"t"
	.db	" "
	.db	"d"
	.db	"i"
	.db	"t"
	.db	","
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	"m"
	.db	"a"
	.db	"i"
	.db	"n"
	.db	"t"
	.db	"e"
	.db	"n"
	.db	"a"
	.db	"n"
	.db	"t"
	.db	" "
	.db	"p"
	.db	"l"
	.db	"a"
	.db	"c"
	.db	"e"
	.db	" "
	.db	" "
	.db	"a"
	.db	"u"
	.db	"x"
	.db	" "
	.db	"c"
	.db	"r"
	.db	"e"
	.db	"d"
	.db	"i"
	.db	"t"
	.db	"s"
	.db	":"
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	"C"
	.db	"o"
	.db	"d"
	.db	"e"
	.db	"/"
	.db	"m"
	.db	"u"
	.db	"s"
	.db	"i"
	.db	"q"
	.db	"u"
	.db	"e"
	.db	":"
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	"B"
	.db	"j"
	.db	"o"
	.db	"r"
	.db	"n"
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	"M"
	.db	"u"
	.db	"s"
	.db	"i"
	.db	"c"
	.db	" "
	.db	"p"
	.db	"l"
	.db	"a"
	.db	"y"
	.db	"e"
	.db	"r"
	.db	":"
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	"A"
	.db	"e"
	.db	"t"
	.db	"h"
	.db	"e"
	.db	"r"
	.db	"b"
	.db	"y"
	.db	"t"
	.db	"e"
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	"G"
	.db	"r"
	.db	"a"
	.db	"f"
	.db	"s"
	.db	":"
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	"N"
	.db	"i"
	.db	"c"
	.db	"o"
	.db	"/"
	.db	"B"
	.db	"j"
	.db	"o"
	.db	"r"
	.db	"n"
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	"E"
	.db	"t"
	.db	" "
	.db	"u"
	.db	"n"
	.db	" "
	.db	"g"
	.db	"r"
	.db	"o"
	.db	"s"
	.db	" "
	.db	"m"
	.db	"e"
	.db	"r"
	.db	"c"
	.db	"i"
	.db	" "
	.db	"a"
	.db	"F"
	.db	"u"
	.db	"r"
	.db	"r"
	.db	"t"
	.db	"e"
	.db	"k"
	.db	" "
	.db	"p"
	.db	"o"
	.db	"u"
	.db	"r"
	.db	" "
	.db	"l"
	.db	"a"
	.db	" "
	.db	" "
	.db	" "
	.db	"d"
	.db	"e"
	.db	"m"
	.db	"y"
	.db	"s"
	.db	"t"
	.db	"i"
	.db	"f"
	.db	"i"
	.db	"c"
	.db	"a"
	.db	"t"
	.db	"i"
	.db	"o"
	.db	"n"
	.db	" "
	.db	"d"
	.db	"e"
	.db	"l"
	.db	"a"
	.db	" "
	.db	"t"
	.db	"w"
	.db	"i"
	.db	"s"
	.db	"t"
	.db	"b"
	.db	"a"
	.db	"r"
	.db	" "
	.db	"e"
	.db	"t"
	.db	" "
	.db	"a"
	.db	" "
	.db	" "
	.db	"M"
	.db	"o"
	.db	"o"
	.db	"z"
	.db	" "
	.db	"a"
	.db	" "
	.db	"q"
	.db	"u"
	.db	"i"
	.db	" "
	.db	"j"
	.db	"'"
	.db	"a"
	.db	"i"
	.db	" "
	.db	" "
	.db	" "
	.db	"h"
	.db	"o"
	.db	"n"
	.db	"t"
	.db	"e"
	.db	"u"
	.db	"s"
	.db	"e"
	.db	"m"
	.db	"e"
	.db	"n"
	.db	"t"
	.db	" "
	.db	"p"
	.db	"o"
	.db	"m"
	.db	"p"
	.db	"e"
	.db	"l"
	.db	"a"
	.db	" "
	.db	"r"
	.db	"o"
	.db	"u"
	.db	"t"
	.db	"i"
	.db	"n"
	.db	"e"
	.db	" "
	.db	"d"
	.db	"e"
	.db	" "
	.db	"s"
	.db	"i"
	.db	"n"
	.db	"."
	.db	"O"
	.db	"k"
	.db	","
	.db	" "
	.db	"m"
	.db	"a"
	.db	"i"
	.db	"n"
	.db	"t"
	.db	"e"
	.db	"n"
	.db	"a"
	.db	"n"
	.db	"t"
	.db	" "
	.db	"c"
	.db	"'"
	.db	" "
	.db	"e"
	.db	"s"
	.db	"t"
	.db	" "
	.db	"l"
	.db	"'"
	.db	"h"
	.db	"e"
	.db	"u"
	.db	"r"
	.db	"e"
	.db	" "
	.db	"d"
	.db	"u"
	.db	" "
	.db	"b"
	.db	"l"
	.db	"a"
	.db	"b"
	.db	"l"
	.db	"a"
	.db	":"
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	"J"
	.db	"'"
	.db	"a"
	.db	"i"
	.db	" "
	.db	"p"
	.db	"r"
	.db	"o"
	.db	"p"
	.db	"o"
	.db	"s"
	.db	"e"
	.db	" "
	.db	"a"
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	"N"
	.db	"i"
	.db	"c"
	.db	"o"
	.db	" "
	.db	"d"
	.db	"e"
	.db	" "
	.db	"f"
	.db	"a"
	.db	"i"
	.db	"r"
	.db	"e"
	.db	" "
	.db	"u"
	.db	"n"
	.db	"e"
	.db	" "
	.db	"p"
	.db	"e"
	.db	"t"
	.db	"i"
	.db	"t"
	.db	"e"
	.db	" "
	.db	"i"
	.db	"n"
	.db	"v"
	.db	"i"
	.db	"t"
	.db	"r"
	.db	"o"
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	"p"
	.db	"o"
	.db	"u"
	.db	"r"
	.db	" "
	.db	"l"
	.db	"e"
	.db	"s"
	.db	" "
	.db	"i"
	.db	"n"
	.db	"f"
	.db	"o"
	.db	"s"
	.db	","
	.db	" "
	.db	" "
	.db	" "
	.db	"c"
	.db	"o"
	.db	"m"
	.db	"m"
	.db	"e"
	.db	" "
	.db	"J"
	.db	"e"
	.db	"f"
	.db	"f"
	.db	" "
	.db	"l"
	.db	"'"
	.db	"a"
	.db	"v"
	.db	"a"
	.db	"i"
	.db	"t"
	.db	"f"
	.db	"a"
	.db	"i"
	.db	"t"
	.db	" "
	.db	"y"
	.db	"'"
	.db	"a"
	.db	" "
	.db	"q"
	.db	"u"
	.db	"e"
	.db	"l"
	.db	"q"
	.db	"u"
	.db	"e"
	.db	"s"
	.db	" "
	.db	"a"
	.db	"n"
	.db	"n"
	.db	"e"
	.db	"e"
	.db	"s"
	.db	"."
	.db	" "
	.db	"C"
	.db	"e"
	.db	"c"
	.db	"i"
	.db	" "
	.db	"e"
	.db	"s"
	.db	"t"
	.db	" "
	.db	" "
	.db	"m"
	.db	"a"
	.db	" "
	.db	"d"
	.db	"e"
	.db	"u"
	.db	"x"
	.db	"i"
	.db	"e"
	.db	"m"
	.db	"e"
	.db	" "
	.db	"p"
	.db	"r"
	.db	"o"
	.db	"d"
	.db	" "
	.db	" "
	.db	"s"
	.db	"c"
	.db	"e"
	.db	"n"
	.db	"e"
	.db	"u"
	.db	"s"
	.db	"e"
	.db	" "
	.db	"a"
	.db	"p"
	.db	"r"
	.db	"e"
	.db	"s"
	.db	" "
	.db	"u"
	.db	"n"
	.db	"e"
	.db	"p"
	.db	"r"
	.db	"e"
	.db	"m"
	.db	"i"
	.db	"e"
	.db	"r"
	.db	"e"
	.db	" "
	.db	"t"
	.db	"e"
	.db	"n"
	.db	"t"
	.db	"a"
	.db	"t"
	.db	"i"
	.db	"v"
	.db	"e"
	.db	"l"
	.db	"a"
	.db	"b"
	.db	"o"
	.db	"r"
	.db	"i"
	.db	"e"
	.db	"u"
	.db	"s"
	.db	"e"
	.db	" "
	.db	"i"
	.db	"l"
	.db	" "
	.db	"y"
	.db	" "
	.db	"a"
	.db	" "
	.db	"q"
	.db	"u"
	.db	"a"
	.db	"s"
	.db	"i"
	.db	"m"
	.db	"e"
	.db	"n"
	.db	"t"
	.db	" "
	.db	"1"
	.db	"0"
	.db	" "
	.db	"a"
	.db	"n"
	.db	"s"
	.db	" "
	.db	"a"
	.db	"V"
	.db	"i"
	.db	"e"
	.db	"u"
	.db	"x"
	.db	"m"
	.db	"i"
	.db	"c"
	.db	"r"
	.db	"o"
	.db	"."
	.db	"."
	.db	"."
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	"."
	.db	"."
	.db	"."
	.db	"s"
	.db	"o"
	.db	"u"
	.db	"v"
	.db	"e"
	.db	"n"
	.db	"i"
	.db	"r"
	.db	"s"
	.db	"."
	.db	"."
	.db	"."
	.db	" "
	.db	" "
	.db	" "
	.db	"P"
	.db	"o"
	.db	"u"
	.db	"r"
	.db	"v"
	.db	"u"
	.db	" "
	.db	"q"
	.db	"u"
	.db	"e"
	.db	" "
	.db	"c"
	.db	"a"
	.db	" "
	.db	"n"
	.db	"e"
	.db	" "
	.db	" "
	.db	"v"
	.db	"o"
	.db	"u"
	.db	"s"
	.db	" "
	.db	"f"
	.db	"a"
	.db	"s"
	.db	"s"
	.db	"e"
	.db	" "
	.db	"p"
	.db	"a"
	.db	"s"
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	"t"
	.db	"r"
	.db	"o"
	.db	"p"
	.db	" "
	.db	"s"
	.db	"a"
	.db	"i"
	.db	"g"
	.db	"n"
	.db	"e"
	.db	"r"
	.db	" "
	.db	"l"
	.db	"e"
	.db	"s"
	.db	" "
	.db	" "
	.db	"y"
	.db	"e"
	.db	"u"
	.db	"x"
	.db	" "
	.db	"e"
	.db	"t"
	.db	" "
	.db	"l"
	.db	"e"
	.db	"s"
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	"o"
	.db	"r"
	.db	"e"
	.db	"i"
	.db	"l"
	.db	"l"
	.db	"e"
	.db	"s"
	.db	"."
	.db	" "
	.db	":"
	.db	")"
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	"J"
	.db	"u"
	.db	"s"
	.db	"t"
	.db	"e"
	.db	"m"
	.db	"e"
	.db	"n"
	.db	"t"
	.db	","
	.db	" "
	.db	"c"
	.db	"'"
	.db	"e"
	.db	"s"
	.db	"t"
	.db	" "
	.db	" "
	.db	"l"
	.db	"'"
	.db	"o"
	.db	"c"
	.db	"c"
	.db	"a"
	.db	"s"
	.db	"i"
	.db	"o"
	.db	"n"
	.db	" "
	.db	"p"
	.db	"o"
	.db	"u"
	.db	"r"
	.db	" "
	.db	" "
	.db	" "
	.db	"m"
	.db	"o"
	.db	"i"
	.db	" "
	.db	"d"
	.db	"e"
	.db	" "
	.db	"t"
	.db	"e"
	.db	"s"
	.db	"t"
	.db	"e"
	.db	"r"
	.db	" "
	.db	"d"
	.db	"e"
	.db	" "
	.db	" "
	.db	"n"
	.db	"o"
	.db	"u"
	.db	"v"
	.db	"e"
	.db	"a"
	.db	"u"
	.db	"x"
	.db	" "
	.db	"t"
	.db	"r"
	.db	"u"
	.db	"c"
	.db	"s"
	.db	" "
	.db	"a"
	.db	" "
	.db	" "
	.db	"i"
	.db	"n"
	.db	"t"
	.db	"e"
	.db	"g"
	.db	"r"
	.db	"e"
	.db	"r"
	.db	" "
	.db	"d"
	.db	"a"
	.db	"n"
	.db	"s"
	.db	" "
	.db	"m"
	.db	"e"
	.db	"s"
	.db	" "
	.db	"f"
	.db	"u"
	.db	"t"
	.db	"u"
	.db	"r"
	.db	"s"
	.db	" "
	.db	"d"
	.db	"e"
	.db	"v"
	.db	"s"
	.db	" "
	.db	"("
	.db	"e"
	.db	"n"
	.db	" "
	.db	" "
	.db	" "
	.db	"p"
	.db	"a"
	.db	"r"
	.db	"t"
	.db	"i"
	.db	"c"
	.db	"u"
	.db	"l"
	.db	"i"
	.db	"e"
	.db	"r"
	.db	" "
	.db	"l"
	.db	"a"
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	"m"
	.db	"u"
	.db	"s"
	.db	"i"
	.db	"q"
	.db	"u"
	.db	"e"
	.db	")"
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	"-"
	.db	"-"
	.db	"-"
	.db	"-"
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	"P"
	.db	"o"
	.db	"u"
	.db	"r"
	.db	" "
	.db	"f"
	.db	"i"
	.db	"n"
	.db	"i"
	.db	"r"
	.db	","
	.db	" "
	.db	"c"
	.db	"o"
	.db	"u"
	.db	"c"
	.db	"o"
	.db	"u"
	.db	"a"
	.db	" "
	.db	"t"
	.db	"o"
	.db	"u"
	.db	"s"
	.db	" "
	.db	"l"
	.db	"e"
	.db	"s"
	.db	" "
	.db	"g"
	.db	"e"
	.db	"n"
	.db	"s"
	.db	" "
	.db	"d"
	.db	"'"
	.db	"O"
	.db	"b"
	.db	"s"
	.db	"o"
	.db	"l"
	.db	"e"
	.db	"t"
	.db	"e"
	.db	" "
	.db	"T"
	.db	"e"
	.db	"a"
	.db	"r"
	.db	"s"
	.db	","
	.db	" "
	.db	"d"
	.db	"e"
	.db	"R"
	.db	"G"
	.db	"C"
	.db	" "
	.db	"e"
	.db	"t"
	.db	" "
	.db	"t"
	.db	"o"
	.db	"u"
	.db	"s"
	.db	" "
	.db	"l"
	.db	"e"
	.db	"s"
	.db	" "
	.db	" "
	.db	" "
	.db	"c"
	.db	"o"
	.db	"p"
	.db	"a"
	.db	"i"
	.db	"n"
	.db	"s"
	.db	" "
	.db	"d"
	.db	"'"
	.db	"a"
	.db	"i"
	.db	"l"
	.db	"l"
	.db	"e"
	.db	"u"
	.db	"r"
	.db	"s"
	.db	"l"
	.db	"e"
	.db	"s"
	.db	" "
	.db	"c"
	.db	"o"
	.db	"d"
	.db	"e"
	.db	"r"
	.db	"s"
	.db	","
	.db	" "
	.db	"l"
	.db	"e"
	.db	"s"
	.db	" "
	.db	" "
	.db	" "
	.db	"g"
	.db	"r"
	.db	"a"
	.db	"p"
	.db	"h"
	.db	"e"
	.db	"u"
	.db	"x"
	.db	","
	.db	" "
	.db	"l"
	.db	"e"
	.db	"s"
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	"z"
	.db	"i"
	.db	"k"
	.db	"o"
	.db	"s"
	.db	","
	.db	" "
	.db	"l"
	.db	"e"
	.db	"s"
	.db	" "
	.db	"j"
	.db	"o"
	.db	"u"
	.db	"e"
	.db	"u"
	.db	"r"
	.db	"s"
	.db	"e"
	.db	"t"
	.db	" "
	.db	"c"
	.db	"e"
	.db	"u"
	.db	"x"
	.db	" "
	.db	"q"
	.db	"u"
	.db	"i"
	.db	" "
	.db	"s"
	.db	"e"
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	"s"
	.db	"o"
	.db	"r"
	.db	"t"
	.db	"e"
	.db	"n"
	.db	"t"
	.db	" "
	.db	"l"
	.db	"e"
	.db	"s"
	.db	" "
	.db	"d"
	.db	"o"
	.db	"i"
	.db	"g"
	.db	"t"
	.db	"s"
	.db	"d"
	.db	"u"
	.db	" "
	.db	"f"
	.db	"o"
	.db	"n"
	.db	"d"
	.db	"e"
	.db	"m"
	.db	"e"
	.db	"n"
	.db	"t"
	.db	"."
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	"E"
	.db	"t"
	.db	" "
	.db	"-"
	.db	"e"
	.db	"n"
	.db	"c"
	.db	"o"
	.db	"r"
	.db	"e"
	.db	"-"
	.db	" "
	.db	"u"
	.db	"n"
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	"g"
	.db	"r"
	.db	"o"
	.db	"s"
	.db	" "
	.db	"c"
	.db	"a"
	.db	"l"
	.db	"i"
	.db	"n"
	.db	" "
	.db	"a"
	.db	" "
	.db	"C"
	.db	"r"
	.db	"3"
	.db	"0"
	.db	"s"
	.db	"p"
	.db	"o"
	.db	"u"
	.db	"r"
	.db	" "
	.db	"m"
	.db	"'"
	.db	"a"
	.db	"v"
	.db	"o"
	.db	"i"
	.db	"r"
	.db	" "
	.db	"s"
	.db	"u"
	.db	"i"
	.db	"v"
	.db	"i"
	.db	"d"
	.db	"a"
	.db	"n"
	.db	"s"
	.db	" "
	.db	"l"
	.db	"e"
	.db	" "
	.db	"d"
	.db	"e"
	.db	"v"
	.db	" "
	.db	"p"
	.db	"c"
	.db	"e"
	.db	"!"
	.db	" "
	.db	" "
	.db	" "
	.db	" "
	.db	"B"
	.db	"y"
	.db	"e"
	.db	"!"
	.db	" "
	.db	"-"
	.db	"t"
	.db	"e"
	.db	"x"
	.db	"t"
	.db	" "
	.db	"l"
	.db	"o"
	.db	"o"
	.db	"p"
	.db	"-"
_twisttiles:
	.dw	204
	.dw	8
	.dw	BANK(_twisttiles__data__)
	.dw	     _twisttiles__data__
	.dw	LL0+0
_cosSinTable:
	.dw	256
	.dw	255
	.dw	255
	.dw	255
	.dw	255
	.dw	255
	.dw	255
	.dw	255
	.dw	254
	.dw	254
	.dw	254
	.dw	253
	.dw	253
	.dw	252
	.dw	252
	.dw	251
	.dw	251
	.dw	250
	.dw	249
	.dw	249
	.dw	248
	.dw	247
	.dw	246
	.dw	245
	.dw	244
	.dw	244
	.dw	243
	.dw	242
	.dw	241
	.dw	239
	.dw	238
	.dw	237
	.dw	236
	.dw	235
	.dw	234
	.dw	232
	.dw	231
	.dw	230
	.dw	228
	.dw	227
	.dw	225
	.dw	224
	.dw	222
	.dw	221
	.dw	219
	.dw	217
	.dw	216
	.dw	214
	.dw	212
	.dw	211
	.dw	209
	.dw	207
	.dw	205
	.dw	203
	.dw	201
	.dw	199
	.dw	197
	.dw	195
	.dw	193
	.dw	191
	.dw	189
	.dw	187
	.dw	185
	.dw	183
	.dw	181
	.dw	178
	.dw	176
	.dw	174
	.dw	171
	.dw	169
	.dw	167
	.dw	164
	.dw	162
	.dw	159
	.dw	157
	.dw	155
	.dw	152
	.dw	149
	.dw	147
	.dw	144
	.dw	142
	.dw	139
	.dw	136
	.dw	134
	.dw	131
	.dw	128
	.dw	126
	.dw	123
	.dw	120
	.dw	117
	.dw	115
	.dw	112
	.dw	109
	.dw	106
	.dw	103
	.dw	100
	.dw	97
	.dw	95
	.dw	92
	.dw	89
	.dw	86
	.dw	83
	.dw	80
	.dw	77
	.dw	74
	.dw	71
	.dw	68
	.dw	65
	.dw	62
	.dw	59
	.dw	56
	.dw	53
	.dw	49
	.dw	46
	.dw	43
	.dw	40
	.dw	37
	.dw	34
	.dw	31
	.dw	28
	.dw	25
	.dw	21
	.dw	18
	.dw	15
	.dw	12
	.dw	9
	.dw	6
	.dw	3
	.dw	0

	.bss
_track:		.ds	1
_mstat:		.ds	1
_sstat:		.ds	1
_VSyncCnt:		.ds	2
_TimerCnt:		.ds	2
_MainCnt:		.ds	2
_SubCnt:		.ds	2
__arg:

;0 error(s) in compilation
;	literal pool:204
;	constant pool:2572
;	global pool:1824
;	Macro pool:1248
